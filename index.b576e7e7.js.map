{"mappings":"AAAC,IAAWA,ECAX,MACC,MAAMC,EAAaC,SAASC,cAAc,sBACpCC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,kBAEtCG,EAAa,KACjB,MAAMC,EAC0C,SAA9CH,EAAYI,aAAa,mBAA+B,EAC1DJ,EAAYK,aAAa,iBAAkBF,GAC3CN,EAAWS,UAAUC,OAAO,WAK5BC,eAH0BL,EAEtB,mBADA,qBAE6BL,SAASW,KAAK,EAGjDT,EAAYU,iBAAiB,QAASR,GACtCD,EAAaS,iBAAiB,QAASR,GAGvCS,OAAOC,WAAW,sBAAsBF,iBAAiB,UAAUG,IAC5DA,EAAEC,UACPjB,EAAWS,UAAUS,OAAO,WAC5Bf,EAAYK,aAAa,iBAAiB,GAC1CG,eAAeQ,iBAAiBlB,SAASW,MAAK,GAEjD,EA3BA,GDCC,mBADUb,EAyBTe,OAAOM,QAAQC,WAxBOJ,UACpBlB,EAAEkB,QACDlB,EAAEuB,mBACFvB,EAAEwB,oBACFxB,EAAEyB,uBACF,SAAUR,GACR,IACE,IAAIS,EAAIC,KACNC,GAAKF,EAAExB,UAAYwB,EAAEG,eAAeC,iBAAiBb,GACrDc,EAAI,EACNH,EAAEG,IAAMH,EAAEG,KAAOL,KAGfK,EACJ,OAAOC,QAAQJ,EAAEG,G,GAErB,mBAAqB/B,EAAEiC,UACpBjC,EAAEiC,QAAU,SAAUhB,GACrB,IAAK,IAAIS,EAAIC,KAAMD,GAAK,IAAMA,EAAEQ,UAAY,CAC1C,GAAIR,EAAER,QAAQD,GAAI,OAAOS,EACzBA,EAAIA,EAAES,U,CAER,OAAO,I,GAIfjC,SAASY,iBAAiB,oBAAoB,W,kDAGxCsB,EAAelC,SAASC,cAAiB,qBAC3CkC,EAAkBnC,SAAC4B,iBAAc,mBAGnCQ,EAAAC,SAA8B,SACRC,GACpBA,EAAA1B,iBAAA,kBACIG,G,yDAQYf,SAAKC,cAAa,sBAClBsC,EAAS,M,wBAOcL,EAAR1B,UAAVgC,IAAJ,UACsBxC,SAATW,KAALH,UAAVC,OAAP,a,OAImC0B,EAAbE,SAAR,SAAVC,GAC6BA,EAAL1B,iBAAjB,SAAT,SAAVG,GACqBU,KAALM,QAAR,UAEmBvB,UAAVS,OAAP,UAC6BiB,EAAR1B,UAAVS,OAAP,UACyBjB,SAATW,KAALH,UAAVC,OAAP,a,OAImCT,SAATW,KAALC,iBACY,SACA,SAAVG,GAGH,IAFCA,EAAF0B,UAGUzC,SAATC,cAAd,iBAAjBO,UAAQS,OAAO,UACyBjB,SAATC,cAAd,YAAZO,UAAFS,OAAO,U,IAGkC,E,IAWEjB,SAATC,cAAd,oBAApBW,iBAAS,UAAUG,IACsBA,EAAF2B,iBAEE,IAAJC,SAAT5B,EAAF6B,eAAfP,SAAR,CAADQ,EAALC,IAC0CC,QAARC,IAAJ,GAAHF,MAATD,OAG0B9B,EAAF6B,cAAdK,OAAP,IEhGrB,MACC,MAAMC,EAAO,CACXC,aAAcnD,SAASC,cAAc,0BACrCmD,cAAepD,SAASC,cAAc,2BACtCoD,MAAOrD,SAASC,cAAc,sBAMhC,SAASqD,IACPtD,SAASW,KAAKH,UAAUC,OAAO,cAC/ByC,EAAKG,MAAM7C,UAAUC,OAAO,Y,CAL9ByC,EAAKC,aAAavC,iBAAiB,QAAS0C,GAC5CJ,EAAKE,cAAcxC,iBAAiB,QAAS0C,EAM9C,EAdA","sources":["src/js/contacts-modal.js","src/js/mobile-menu.js","src/js/read-more-modal.js"],"sourcesContent":["!(function (e) {\n  'function' != typeof e.matches &&\n    (e.matches =\n      e.msMatchesSelector ||\n      e.mozMatchesSelector ||\n      e.webkitMatchesSelector ||\n      function (e) {\n        for (\n          var t = this,\n            o = (t.document || t.ownerDocument).querySelectorAll(e),\n            n = 0;\n          o[n] && o[n] !== t;\n\n        )\n          ++n;\n        return Boolean(o[n]);\n      }),\n    'function' != typeof e.closest &&\n      (e.closest = function (e) {\n        for (var t = this; t && 1 === t.nodeType; ) {\n          if (t.matches(e)) return t;\n          t = t.parentNode;\n        }\n        return null;\n      });\n})(window.Element.prototype);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n  var modalButtons = document.querySelectorAll('.js-open-modal'),\n    overlay = document.querySelector('.js-overlay-modal'),\n    closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Перебираем массив кнопок */\n  modalButtons.forEach(function (item) {\n    /* Назначаем каждой кнопке обработчик клика */\n    item.addEventListener('click', function (e) {\n      /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n      e.preventDefault();\n\n      /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n      var modalId = this.getAttribute('data-modal'),\n        modalElem = document.querySelector(\n          '.modal[data-modal=\"' + modalId + '\"]'\n        );\n\n      /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n      document.body.classList.toggle('modal-open');\n    }); // end click\n  }); // end foreach\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      var parentModal = this.closest('.modal');\n\n      parentModal.classList.remove('active');\n      overlay.classList.remove('active');\n      document.body.classList.toggle('modal-open');\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keyup',\n    function (e) {\n      var key = e.keyCode;\n\n      if (key == 27) {\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.overlay').classList.remove('active');\n      }\n    },\n    false\n  );\n\n  // overlay.addEventListener('click', function () {\n  //   document.querySelector('.modal.active').classList.remove('active');\n  //   document.body.classList.toggle('modal-open');\n  //   this.classList.remove('active');\n  // });\n}); // end ready\n\n(() => {\n  document.querySelector('.js-speaker-form').addEventListener('submit', e => {\n    e.preventDefault();\n\n    new FormData(e.currentTarget).forEach((value, name) =>\n      console.log(`${name}: ${value}`)\n    );\n\n    e.currentTarget.reset();\n  });\n})();\n","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelector(\"[read-more-modal-open]\"),\n    closeModalBtn: document.querySelector(\"[read-more-modal-close]\"),\n    modal: document.querySelector(\"[read-more-modal]\"),\n  };\n\n  refs.openModalBtn.addEventListener(\"click\", toggleModal);\n  refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n  function toggleModal() {\n    document.body.classList.toggle(\"modal-open\");\n    refs.modal.classList.toggle(\"is-hidden\");\n  }\n})();"],"names":["e1","mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","forEach","item","modalId","add","keyCode","preventDefault","FormData","currentTarget","value","name","console","log","reset","refs","openModalBtn","closeModalBtn","modal","toggleModal"],"version":3,"file":"index.b576e7e7.js.map"}